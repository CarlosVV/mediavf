//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoTrade.Accounts.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial interface IAccountRepository
    {
        IDbSet<Account> Accounts { get; set; }
        DbQuery<Account> AccountsQuery { get; }
    
        IDbSet<AccountFundReservation> AccountFundReservations { get; set; }
        DbQuery<AccountFundReservation> AccountFundReservationsQuery { get; }
    
        IDbSet<AccountTransaction> AccountTransactions { get; set; }
        DbQuery<AccountTransaction> AccountTransactionsQuery { get; }
    
        IDbSet<TransactionStatus> TransactionStatuses { get; set; }
        DbQuery<TransactionStatus> TransactionStatusesQuery { get; }
    
        IDbSet<AccountType> AccountTypes { get; set; }
        DbQuery<AccountType> AccountTypesQuery { get; }
    
    
    	int SaveChanges();
    }
    
    public partial class AccountRepository : DbContext, IAccountRepository
    {
        public AccountRepository()
            : base("name=AccountRepository")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public IDbSet<Account> Accounts { get; set; }
        public DbQuery<Account> AccountsQuery { get { return Accounts as DbQuery<Account>; } }
        public IDbSet<AccountFundReservation> AccountFundReservations { get; set; }
        public DbQuery<AccountFundReservation> AccountFundReservationsQuery { get { return AccountFundReservations as DbQuery<AccountFundReservation>; } }
        public IDbSet<AccountTransaction> AccountTransactions { get; set; }
        public DbQuery<AccountTransaction> AccountTransactionsQuery { get { return AccountTransactions as DbQuery<AccountTransaction>; } }
        public IDbSet<TransactionStatus> TransactionStatuses { get; set; }
        public DbQuery<TransactionStatus> TransactionStatusesQuery { get { return TransactionStatuses as DbQuery<TransactionStatus>; } }
        public IDbSet<AccountType> AccountTypes { get; set; }
        public DbQuery<AccountType> AccountTypesQuery { get { return AccountTypes as DbQuery<AccountType>; } }
    }
}
