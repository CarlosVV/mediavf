//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_Band_Label", "Label", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.Label), "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.Artist), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_UserArtist_Artist", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.Artist), "UserArtist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.UserArtist), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_UserArtist_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.User), "UserArtist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.UserArtist), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_ModuleDirectory_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.Application), "ModuleDirectory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.ModuleDirectory), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_Module_ModuleDirectory", "ModuleDirectory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.ModuleDirectory), "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.Module), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_ArtistGenre_Artist", "Artist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.Artist), "ArtistGenre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.ArtistGenre), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_ArtistGenre_ArtistGenre", "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.Genre), "ArtistGenre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.ArtistGenre), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_City_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.Country), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.City), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_City_StateOrProvince", "StateOrProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.StateOrProvince), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.City), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.City), "TourDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.TourDate), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_Venue_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.City), "Venue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.Venue), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_StateOrProvince_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.Country), "StateOrProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.StateOrProvince), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.Country), "TourDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.TourDate), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_Regex_Module", "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.Module), "Regex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.Regex), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_RegexCapture_Regex", "Regex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MediaVF.Entities.ArtistTrack.Regex), "RegexCapture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.RegexCapture), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_StateOrProvince", "StateOrProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.StateOrProvince), "TourDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.TourDate), true)]
[assembly: EdmRelationshipAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_Venue", "Venue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MediaVF.Entities.ArtistTrack.Venue), "TourDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MediaVF.Entities.ArtistTrack.TourDate), true)]

#endregion

namespace MediaVF.Entities.ArtistTrack
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ArtistTrackEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ArtistTrackEntities object using the connection string found in the 'ArtistTrackEntities' section of the application configuration file.
        /// </summary>
        public ArtistTrackEntities() : base("name=ArtistTrackEntities", "ArtistTrackEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ArtistTrackEntities object.
        /// </summary>
        public ArtistTrackEntities(string connectionString) : base(connectionString, "ArtistTrackEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ArtistTrackEntities object.
        /// </summary>
        public ArtistTrackEntities(EntityConnection connection) : base(connection, "ArtistTrackEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Artist> Artists
        {
            get
            {
                if ((_Artists == null))
                {
                    _Artists = base.CreateObjectSet<Artist>("Artists");
                }
                return _Artists;
            }
        }
        private ObjectSet<Artist> _Artists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Label> Labels
        {
            get
            {
                if ((_Labels == null))
                {
                    _Labels = base.CreateObjectSet<Label>("Labels");
                }
                return _Labels;
            }
        }
        private ObjectSet<Label> _Labels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserArtist> UserArtists
        {
            get
            {
                if ((_UserArtists == null))
                {
                    _UserArtists = base.CreateObjectSet<UserArtist>("UserArtists");
                }
                return _UserArtists;
            }
        }
        private ObjectSet<UserArtist> _UserArtists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Module> Modules
        {
            get
            {
                if ((_Modules == null))
                {
                    _Modules = base.CreateObjectSet<Module>("Modules");
                }
                return _Modules;
            }
        }
        private ObjectSet<Module> _Modules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModuleDirectory> ModuleDirectories
        {
            get
            {
                if ((_ModuleDirectories == null))
                {
                    _ModuleDirectories = base.CreateObjectSet<ModuleDirectory>("ModuleDirectories");
                }
                return _ModuleDirectories;
            }
        }
        private ObjectSet<ModuleDirectory> _ModuleDirectories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArtistGenre> ArtistGenres
        {
            get
            {
                if ((_ArtistGenres == null))
                {
                    _ArtistGenres = base.CreateObjectSet<ArtistGenre>("ArtistGenres");
                }
                return _ArtistGenres;
            }
        }
        private ObjectSet<ArtistGenre> _ArtistGenres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Regex> Regexes
        {
            get
            {
                if ((_Regexes == null))
                {
                    _Regexes = base.CreateObjectSet<Regex>("Regexes");
                }
                return _Regexes;
            }
        }
        private ObjectSet<Regex> _Regexes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegexCapture> RegexCaptures
        {
            get
            {
                if ((_RegexCaptures == null))
                {
                    _RegexCaptures = base.CreateObjectSet<RegexCapture>("RegexCaptures");
                }
                return _RegexCaptures;
            }
        }
        private ObjectSet<RegexCapture> _RegexCaptures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateOrProvince> StateOrProvinces
        {
            get
            {
                if ((_StateOrProvinces == null))
                {
                    _StateOrProvinces = base.CreateObjectSet<StateOrProvince>("StateOrProvinces");
                }
                return _StateOrProvinces;
            }
        }
        private ObjectSet<StateOrProvince> _StateOrProvinces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TourDate> TourDates
        {
            get
            {
                if ((_TourDates == null))
                {
                    _TourDates = base.CreateObjectSet<TourDate>("TourDates");
                }
                return _TourDates;
            }
        }
        private ObjectSet<TourDate> _TourDates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Venue> Venues
        {
            get
            {
                if ((_Venues == null))
                {
                    _Venues = base.CreateObjectSet<Venue>("Venues");
                }
                return _Venues;
            }
        }
        private ObjectSet<Venue> _Venues;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Artists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArtists(Artist artist)
        {
            base.AddObject("Artists", artist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Labels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLabels(Label label)
        {
            base.AddObject("Labels", label);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserArtists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserArtists(UserArtist userArtist)
        {
            base.AddObject("UserArtists", userArtist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Modules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModules(Module module)
        {
            base.AddObject("Modules", module);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModuleDirectories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModuleDirectories(ModuleDirectory moduleDirectory)
        {
            base.AddObject("ModuleDirectories", moduleDirectory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArtistGenres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArtistGenres(ArtistGenre artistGenre)
        {
            base.AddObject("ArtistGenres", artistGenre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regexes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegexes(Regex regex)
        {
            base.AddObject("Regexes", regex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegexCaptures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegexCaptures(RegexCapture regexCapture)
        {
            base.AddObject("RegexCaptures", regexCapture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateOrProvinces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateOrProvinces(StateOrProvince stateOrProvince)
        {
            base.AddObject("StateOrProvinces", stateOrProvince);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TourDates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTourDates(TourDate tourDate)
        {
            base.AddObject("TourDates", tourDate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Venues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVenues(Venue venue)
        {
            base.AddObject("Venues", venue);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Application CreateApplication(global::System.Int32 id, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            Application application = new Application();
            application.ID = id;
            application.Name = name;
            application.Created = created;
            application.Modified = modified;
            return application;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_ModuleDirectory_Application", "ModuleDirectory")]
        public EntityCollection<ModuleDirectory> ModuleDirectories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModuleDirectory>("MediaVF.Entities.ArtistTrack.FK_ModuleDirectory_Application", "ModuleDirectory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModuleDirectory>("MediaVF.Entities.ArtistTrack.FK_ModuleDirectory_Application", "ModuleDirectory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Artist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Artist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Artist object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Artist CreateArtist(global::System.Int32 id, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            Artist artist = new Artist();
            artist.ID = id;
            artist.Name = name;
            artist.Created = created;
            artist.Modified = modified;
            return artist;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacebookID
        {
            get
            {
                return _FacebookID;
            }
            set
            {
                OnFacebookIDChanging(value);
                ReportPropertyChanging("FacebookID");
                _FacebookID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacebookID");
                OnFacebookIDChanged();
            }
        }
        private Nullable<global::System.Int64> _FacebookID;
        partial void OnFacebookIDChanging(Nullable<global::System.Int64> value);
        partial void OnFacebookIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LabelID
        {
            get
            {
                return _LabelID;
            }
            set
            {
                OnLabelIDChanging(value);
                ReportPropertyChanging("LabelID");
                _LabelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LabelID");
                OnLabelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LabelID;
        partial void OnLabelIDChanging(Nullable<global::System.Int32> value);
        partial void OnLabelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hometown
        {
            get
            {
                return _Hometown;
            }
            set
            {
                OnHometownChanging(value);
                ReportPropertyChanging("Hometown");
                _Hometown = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hometown");
                OnHometownChanged();
            }
        }
        private global::System.String _Hometown;
        partial void OnHometownChanging(global::System.String value);
        partial void OnHometownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Band_Label", "Label")]
        public Label Label
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Label>("MediaVF.Entities.ArtistTrack.FK_Band_Label", "Label").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Label>("MediaVF.Entities.ArtistTrack.FK_Band_Label", "Label").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Label> LabelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Label>("MediaVF.Entities.ArtistTrack.FK_Band_Label", "Label");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Label>("MediaVF.Entities.ArtistTrack.FK_Band_Label", "Label", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_UserArtist_Artist", "UserArtist")]
        public EntityCollection<UserArtist> UserArtists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserArtist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_Artist", "UserArtist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserArtist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_Artist", "UserArtist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_ArtistGenre_Artist", "ArtistGenre")]
        public EntityCollection<ArtistGenre> ArtistGenres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArtistGenre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_Artist", "ArtistGenre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArtistGenre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_Artist", "ArtistGenre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="ArtistGenre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArtistGenre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArtistGenre object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="artistID">Initial value of the ArtistID property.</param>
        /// <param name="genreID">Initial value of the GenreID property.</param>
        public static ArtistGenre CreateArtistGenre(global::System.Int32 id, global::System.Int32 artistID, global::System.Int32 genreID)
        {
            ArtistGenre artistGenre = new ArtistGenre();
            artistGenre.ID = id;
            artistGenre.ArtistID = artistID;
            artistGenre.GenreID = genreID;
            return artistGenre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArtistID
        {
            get
            {
                return _ArtistID;
            }
            set
            {
                OnArtistIDChanging(value);
                ReportPropertyChanging("ArtistID");
                _ArtistID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArtistID");
                OnArtistIDChanged();
            }
        }
        private global::System.Int32 _ArtistID;
        partial void OnArtistIDChanging(global::System.Int32 value);
        partial void OnArtistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenreID
        {
            get
            {
                return _GenreID;
            }
            set
            {
                OnGenreIDChanging(value);
                ReportPropertyChanging("GenreID");
                _GenreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreID");
                OnGenreIDChanged();
            }
        }
        private global::System.Int32 _GenreID;
        partial void OnGenreIDChanging(global::System.Int32 value);
        partial void OnGenreIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_ArtistGenre_Artist", "Artist")]
        public Artist Artist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_Artist", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_Artist", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> ArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_Artist", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_Artist", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_ArtistGenre_ArtistGenre", "Genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_ArtistGenre", "Genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_ArtistGenre", "Genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_ArtistGenre", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_ArtistGenre", "Genre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static City CreateCity(global::System.Int32 id, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            City city = new City();
            city.ID = id;
            city.Name = name;
            city.Created = created;
            city.Modified = modified;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateOrProvinceID
        {
            get
            {
                return _StateOrProvinceID;
            }
            set
            {
                OnStateOrProvinceIDChanging(value);
                ReportPropertyChanging("StateOrProvinceID");
                _StateOrProvinceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateOrProvinceID");
                OnStateOrProvinceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateOrProvinceID;
        partial void OnStateOrProvinceIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateOrProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_City_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_City_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_City_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_City_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_City_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_City_StateOrProvince", "StateOrProvince")]
        public StateOrProvince StateOrProvince
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_City_StateOrProvince", "StateOrProvince").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_City_StateOrProvince", "StateOrProvince").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateOrProvince> StateOrProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_City_StateOrProvince", "StateOrProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_City_StateOrProvince", "StateOrProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_City", "TourDate")]
        public EntityCollection<TourDate> TourDates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_City", "TourDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_City", "TourDate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Venue_City", "Venue")]
        public EntityCollection<Venue> Venues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Venue>("MediaVF.Entities.ArtistTrack.FK_Venue_City", "Venue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Venue>("MediaVF.Entities.ArtistTrack.FK_Venue_City", "Venue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            Country country = new Country();
            country.ID = id;
            country.Name = name;
            country.Created = created;
            country.Modified = modified;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_City_Country", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("MediaVF.Entities.ArtistTrack.FK_City_Country", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("MediaVF.Entities.ArtistTrack.FK_City_Country", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_StateOrProvince_Country", "StateOrProvince")]
        public EntityCollection<StateOrProvince> StateOrProvinces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_StateOrProvince_Country", "StateOrProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_StateOrProvince_Country", "StateOrProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_Country", "TourDate")]
        public EntityCollection<TourDate> TourDates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_Country", "TourDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_Country", "TourDate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Genre CreateGenre(global::System.Int32 id, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            Genre genre = new Genre();
            genre.ID = id;
            genre.Name = name;
            genre.Created = created;
            genre.Modified = modified;
            return genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_ArtistGenre_ArtistGenre", "ArtistGenre")]
        public EntityCollection<ArtistGenre> ArtistGenres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArtistGenre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_ArtistGenre", "ArtistGenre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArtistGenre>("MediaVF.Entities.ArtistTrack.FK_ArtistGenre_ArtistGenre", "ArtistGenre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Label")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Label : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Label object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Label CreateLabel(global::System.Int32 id, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            Label label = new Label();
            label.ID = id;
            label.Name = name;
            label.Created = created;
            label.Modified = modified;
            return label;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Band_Label", "Artist")]
        public EntityCollection<Artist> Artists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Artist>("MediaVF.Entities.ArtistTrack.FK_Band_Label", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Artist>("MediaVF.Entities.ArtistTrack.FK_Band_Label", "Artist", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Module object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="moduleDirectoryID">Initial value of the ModuleDirectoryID property.</param>
        /// <param name="assemblyName">Initial value of the AssemblyName property.</param>
        /// <param name="class">Initial value of the Class property.</param>
        /// <param name="moduleName">Initial value of the ModuleName property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Module CreateModule(global::System.Int32 id, global::System.Int32 moduleDirectoryID, global::System.String assemblyName, global::System.String @class, global::System.String moduleName, global::System.Boolean active, global::System.DateTime created, global::System.DateTime modified)
        {
            Module module = new Module();
            module.ID = id;
            module.ModuleDirectoryID = moduleDirectoryID;
            module.AssemblyName = assemblyName;
            module.Class = @class;
            module.ModuleName = moduleName;
            module.Active = active;
            module.Created = created;
            module.Modified = modified;
            return module;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleDirectoryID
        {
            get
            {
                return _ModuleDirectoryID;
            }
            set
            {
                OnModuleDirectoryIDChanging(value);
                ReportPropertyChanging("ModuleDirectoryID");
                _ModuleDirectoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleDirectoryID");
                OnModuleDirectoryIDChanged();
            }
        }
        private global::System.Int32 _ModuleDirectoryID;
        partial void OnModuleDirectoryIDChanging(global::System.Int32 value);
        partial void OnModuleDirectoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssemblyName
        {
            get
            {
                return _AssemblyName;
            }
            set
            {
                OnAssemblyNameChanging(value);
                ReportPropertyChanging("AssemblyName");
                _AssemblyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AssemblyName");
                OnAssemblyNameChanged();
            }
        }
        private global::System.String _AssemblyName;
        partial void OnAssemblyNameChanging(global::System.String value);
        partial void OnAssemblyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Class
        {
            get
            {
                return _Class;
            }
            set
            {
                OnClassChanging(value);
                ReportPropertyChanging("Class");
                _Class = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Class");
                OnClassChanged();
            }
        }
        private global::System.String _Class;
        partial void OnClassChanging(global::System.String value);
        partial void OnClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Module_ModuleDirectory", "ModuleDirectory")]
        public ModuleDirectory ModuleDirectory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModuleDirectory>("MediaVF.Entities.ArtistTrack.FK_Module_ModuleDirectory", "ModuleDirectory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModuleDirectory>("MediaVF.Entities.ArtistTrack.FK_Module_ModuleDirectory", "ModuleDirectory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ModuleDirectory> ModuleDirectoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ModuleDirectory>("MediaVF.Entities.ArtistTrack.FK_Module_ModuleDirectory", "ModuleDirectory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ModuleDirectory>("MediaVF.Entities.ArtistTrack.FK_Module_ModuleDirectory", "ModuleDirectory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Regex_Module", "Regex")]
        public EntityCollection<Regex> Regexes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Regex>("MediaVF.Entities.ArtistTrack.FK_Regex_Module", "Regex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Regex>("MediaVF.Entities.ArtistTrack.FK_Regex_Module", "Regex", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="ModuleDirectory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModuleDirectory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModuleDirectory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        /// <param name="checkSubFolders">Initial value of the CheckSubFolders property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static ModuleDirectory CreateModuleDirectory(global::System.Int32 id, global::System.Int32 applicationID, global::System.String directory, global::System.Boolean checkSubFolders, global::System.DateTime created, global::System.DateTime modified)
        {
            ModuleDirectory moduleDirectory = new ModuleDirectory();
            moduleDirectory.ID = id;
            moduleDirectory.ApplicationID = applicationID;
            moduleDirectory.Directory = directory;
            moduleDirectory.CheckSubFolders = checkSubFolders;
            moduleDirectory.Created = created;
            moduleDirectory.Modified = modified;
            return moduleDirectory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CheckSubFolders
        {
            get
            {
                return _CheckSubFolders;
            }
            set
            {
                OnCheckSubFoldersChanging(value);
                ReportPropertyChanging("CheckSubFolders");
                _CheckSubFolders = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckSubFolders");
                OnCheckSubFoldersChanged();
            }
        }
        private global::System.Boolean _CheckSubFolders;
        partial void OnCheckSubFoldersChanging(global::System.Boolean value);
        partial void OnCheckSubFoldersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_ModuleDirectory_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MediaVF.Entities.ArtistTrack.FK_ModuleDirectory_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MediaVF.Entities.ArtistTrack.FK_ModuleDirectory_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("MediaVF.Entities.ArtistTrack.FK_ModuleDirectory_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("MediaVF.Entities.ArtistTrack.FK_ModuleDirectory_Application", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Module_ModuleDirectory", "Module")]
        public EntityCollection<Module> Modules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Module>("MediaVF.Entities.ArtistTrack.FK_Module_ModuleDirectory", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Module>("MediaVF.Entities.ArtistTrack.FK_Module_ModuleDirectory", "Module", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Regex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Regex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Regex object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="moduleID">Initial value of the ModuleID property.</param>
        /// <param name="regexPattern">Initial value of the RegexPattern property.</param>
        /// <param name="matchType">Initial value of the MatchType property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Regex CreateRegex(global::System.Int32 id, global::System.Int32 moduleID, global::System.String regexPattern, global::System.String matchType, global::System.DateTime created, global::System.DateTime modified)
        {
            Regex regex = new Regex();
            regex.ID = id;
            regex.ModuleID = moduleID;
            regex.RegexPattern = regexPattern;
            regex.MatchType = matchType;
            regex.Created = created;
            regex.Modified = modified;
            return regex;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleID
        {
            get
            {
                return _ModuleID;
            }
            set
            {
                OnModuleIDChanging(value);
                ReportPropertyChanging("ModuleID");
                _ModuleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleID");
                OnModuleIDChanged();
            }
        }
        private global::System.Int32 _ModuleID;
        partial void OnModuleIDChanging(global::System.Int32 value);
        partial void OnModuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegexPattern
        {
            get
            {
                return _RegexPattern;
            }
            set
            {
                OnRegexPatternChanging(value);
                ReportPropertyChanging("RegexPattern");
                _RegexPattern = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegexPattern");
                OnRegexPatternChanged();
            }
        }
        private global::System.String _RegexPattern;
        partial void OnRegexPatternChanging(global::System.String value);
        partial void OnRegexPatternChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatchType
        {
            get
            {
                return _MatchType;
            }
            set
            {
                OnMatchTypeChanging(value);
                ReportPropertyChanging("MatchType");
                _MatchType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MatchType");
                OnMatchTypeChanged();
            }
        }
        private global::System.String _MatchType;
        partial void OnMatchTypeChanging(global::System.String value);
        partial void OnMatchTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Regex_Module", "Module")]
        public Module Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("MediaVF.Entities.ArtistTrack.FK_Regex_Module", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("MediaVF.Entities.ArtistTrack.FK_Regex_Module", "Module").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("MediaVF.Entities.ArtistTrack.FK_Regex_Module", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("MediaVF.Entities.ArtistTrack.FK_Regex_Module", "Module", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_RegexCapture_Regex", "RegexCapture")]
        public EntityCollection<RegexCapture> RegexCaptures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegexCapture>("MediaVF.Entities.ArtistTrack.FK_RegexCapture_Regex", "RegexCapture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegexCapture>("MediaVF.Entities.ArtistTrack.FK_RegexCapture_Regex", "RegexCapture", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="RegexCapture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegexCapture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegexCapture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="regexID">Initial value of the RegexID property.</param>
        /// <param name="captureIndex">Initial value of the CaptureIndex property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static RegexCapture CreateRegexCapture(global::System.Int32 id, global::System.Int32 regexID, global::System.Int32 captureIndex, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            RegexCapture regexCapture = new RegexCapture();
            regexCapture.ID = id;
            regexCapture.RegexID = regexID;
            regexCapture.CaptureIndex = captureIndex;
            regexCapture.Name = name;
            regexCapture.Created = created;
            regexCapture.Modified = modified;
            return regexCapture;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegexID
        {
            get
            {
                return _RegexID;
            }
            set
            {
                OnRegexIDChanging(value);
                ReportPropertyChanging("RegexID");
                _RegexID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegexID");
                OnRegexIDChanged();
            }
        }
        private global::System.Int32 _RegexID;
        partial void OnRegexIDChanging(global::System.Int32 value);
        partial void OnRegexIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CaptureIndex
        {
            get
            {
                return _CaptureIndex;
            }
            set
            {
                OnCaptureIndexChanging(value);
                ReportPropertyChanging("CaptureIndex");
                _CaptureIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CaptureIndex");
                OnCaptureIndexChanged();
            }
        }
        private global::System.Int32 _CaptureIndex;
        partial void OnCaptureIndexChanging(global::System.Int32 value);
        partial void OnCaptureIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_RegexCapture_Regex", "Regex")]
        public Regex Regex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regex>("MediaVF.Entities.ArtistTrack.FK_RegexCapture_Regex", "Regex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regex>("MediaVF.Entities.ArtistTrack.FK_RegexCapture_Regex", "Regex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Regex> RegexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Regex>("MediaVF.Entities.ArtistTrack.FK_RegexCapture_Regex", "Regex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Regex>("MediaVF.Entities.ArtistTrack.FK_RegexCapture_Regex", "Regex", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="StateOrProvince")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateOrProvince : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateOrProvince object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static StateOrProvince CreateStateOrProvince(global::System.Int32 id, global::System.Int32 countryID, global::System.String name, global::System.DateTime created, global::System.DateTime modified)
        {
            StateOrProvince stateOrProvince = new StateOrProvince();
            stateOrProvince.ID = id;
            stateOrProvince.CountryID = countryID;
            stateOrProvince.Name = name;
            stateOrProvince.Created = created;
            stateOrProvince.Modified = modified;
            return stateOrProvince;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_City_StateOrProvince", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("MediaVF.Entities.ArtistTrack.FK_City_StateOrProvince", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("MediaVF.Entities.ArtistTrack.FK_City_StateOrProvince", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_StateOrProvince_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_StateOrProvince_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_StateOrProvince_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_StateOrProvince_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_StateOrProvince_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_StateOrProvince", "TourDate")]
        public EntityCollection<TourDate> TourDates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_StateOrProvince", "TourDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_StateOrProvince", "TourDate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="TourDate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TourDate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TourDate object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="artistID">Initial value of the ArtistID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static TourDate CreateTourDate(global::System.Int32 id, global::System.Int32 artistID, global::System.DateTime date)
        {
            TourDate tourDate = new TourDate();
            tourDate.ID = id;
            tourDate.ArtistID = artistID;
            tourDate.Date = date;
            return tourDate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArtistID
        {
            get
            {
                return _ArtistID;
            }
            set
            {
                OnArtistIDChanging(value);
                ReportPropertyChanging("ArtistID");
                _ArtistID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArtistID");
                OnArtistIDChanged();
            }
        }
        private global::System.Int32 _ArtistID;
        partial void OnArtistIDChanging(global::System.Int32 value);
        partial void OnArtistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VenueID
        {
            get
            {
                return _VenueID;
            }
            set
            {
                OnVenueIDChanging(value);
                ReportPropertyChanging("VenueID");
                _VenueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VenueID");
                OnVenueIDChanged();
            }
        }
        private Nullable<global::System.Int32> _VenueID;
        partial void OnVenueIDChanging(Nullable<global::System.Int32> value);
        partial void OnVenueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VenueName
        {
            get
            {
                return _VenueName;
            }
            set
            {
                OnVenueNameChanging(value);
                ReportPropertyChanging("VenueName");
                _VenueName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VenueName");
                OnVenueNameChanged();
            }
        }
        private global::System.String _VenueName;
        partial void OnVenueNameChanging(global::System.String value);
        partial void OnVenueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateOrProvinceID
        {
            get
            {
                return _StateOrProvinceID;
            }
            set
            {
                OnStateOrProvinceIDChanging(value);
                ReportPropertyChanging("StateOrProvinceID");
                _StateOrProvinceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateOrProvinceID");
                OnStateOrProvinceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateOrProvinceID;
        partial void OnStateOrProvinceIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateOrProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateOrProvince
        {
            get
            {
                return _StateOrProvince;
            }
            set
            {
                OnStateOrProvinceChanging(value);
                ReportPropertyChanging("StateOrProvince");
                _StateOrProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateOrProvince");
                OnStateOrProvinceChanged();
            }
        }
        private global::System.String _StateOrProvince;
        partial void OnStateOrProvinceChanging(global::System.String value);
        partial void OnStateOrProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DoorsOpen
        {
            get
            {
                return _DoorsOpen;
            }
            set
            {
                OnDoorsOpenChanging(value);
                ReportPropertyChanging("DoorsOpen");
                _DoorsOpen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoorsOpen");
                OnDoorsOpenChanged();
            }
        }
        private Nullable<global::System.DateTime> _DoorsOpen;
        partial void OnDoorsOpenChanging(Nullable<global::System.DateTime> value);
        partial void OnDoorsOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowStarts
        {
            get
            {
                return _ShowStarts;
            }
            set
            {
                OnShowStartsChanging(value);
                ReportPropertyChanging("ShowStarts");
                _ShowStarts = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowStarts");
                OnShowStartsChanged();
            }
        }
        private global::System.String _ShowStarts;
        partial void OnShowStartsChanging(global::System.String value);
        partial void OnShowStartsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_TourDate_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_TourDate_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_TourDate_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_TourDate_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_Country", "Country")]
        public Country Country1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_TourDate_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_TourDate_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_TourDate_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("MediaVF.Entities.ArtistTrack.FK_TourDate_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_StateOrProvince", "StateOrProvince")]
        public StateOrProvince StateOrProvince1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_TourDate_StateOrProvince", "StateOrProvince").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_TourDate_StateOrProvince", "StateOrProvince").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateOrProvince> StateOrProvince1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_TourDate_StateOrProvince", "StateOrProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateOrProvince>("MediaVF.Entities.ArtistTrack.FK_TourDate_StateOrProvince", "StateOrProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_Venue", "Venue")]
        public Venue Venue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("MediaVF.Entities.ArtistTrack.FK_TourDate_Venue", "Venue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("MediaVF.Entities.ArtistTrack.FK_TourDate_Venue", "Venue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Venue> VenueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("MediaVF.Entities.ArtistTrack.FK_TourDate_Venue", "Venue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Venue>("MediaVF.Entities.ArtistTrack.FK_TourDate_Venue", "Venue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="syncWithFacebook">Initial value of the SyncWithFacebook property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.String email, global::System.Boolean syncWithFacebook, global::System.DateTime created, global::System.DateTime modified)
        {
            User user = new User();
            user.ID = id;
            user.UserName = userName;
            user.Password = password;
            user.Email = email;
            user.SyncWithFacebook = syncWithFacebook;
            user.Created = created;
            user.Modified = modified;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SyncWithFacebook
        {
            get
            {
                return _SyncWithFacebook;
            }
            set
            {
                OnSyncWithFacebookChanging(value);
                ReportPropertyChanging("SyncWithFacebook");
                _SyncWithFacebook = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SyncWithFacebook");
                OnSyncWithFacebookChanged();
            }
        }
        private global::System.Boolean _SyncWithFacebook;
        partial void OnSyncWithFacebookChanging(global::System.Boolean value);
        partial void OnSyncWithFacebookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacebookEmail
        {
            get
            {
                return _FacebookEmail;
            }
            set
            {
                OnFacebookEmailChanging(value);
                ReportPropertyChanging("FacebookEmail");
                _FacebookEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacebookEmail");
                OnFacebookEmailChanged();
            }
        }
        private global::System.String _FacebookEmail;
        partial void OnFacebookEmailChanging(global::System.String value);
        partial void OnFacebookEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacebookPassword
        {
            get
            {
                return _FacebookPassword;
            }
            set
            {
                OnFacebookPasswordChanging(value);
                ReportPropertyChanging("FacebookPassword");
                _FacebookPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacebookPassword");
                OnFacebookPasswordChanged();
            }
        }
        private global::System.String _FacebookPassword;
        partial void OnFacebookPasswordChanging(global::System.String value);
        partial void OnFacebookPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FacebookAccessToken
        {
            get
            {
                return _FacebookAccessToken;
            }
            set
            {
                OnFacebookAccessTokenChanging(value);
                ReportPropertyChanging("FacebookAccessToken");
                _FacebookAccessToken = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FacebookAccessToken");
                OnFacebookAccessTokenChanged();
            }
        }
        private global::System.String _FacebookAccessToken;
        partial void OnFacebookAccessTokenChanging(global::System.String value);
        partial void OnFacebookAccessTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_UserArtist_User", "UserArtist")]
        public EntityCollection<UserArtist> UserArtists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserArtist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_User", "UserArtist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserArtist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_User", "UserArtist", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="UserArtist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserArtist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserArtist object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="artistID">Initial value of the ArtistID property.</param>
        public static UserArtist CreateUserArtist(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 artistID)
        {
            UserArtist userArtist = new UserArtist();
            userArtist.ID = id;
            userArtist.UserID = userID;
            userArtist.ArtistID = artistID;
            return userArtist;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArtistID
        {
            get
            {
                return _ArtistID;
            }
            set
            {
                OnArtistIDChanging(value);
                ReportPropertyChanging("ArtistID");
                _ArtistID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArtistID");
                OnArtistIDChanged();
            }
        }
        private global::System.Int32 _ArtistID;
        partial void OnArtistIDChanging(global::System.Int32 value);
        partial void OnArtistIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_UserArtist_Artist", "Artist")]
        public Artist Artist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_Artist", "Artist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_Artist", "Artist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Artist> ArtistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_Artist", "Artist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Artist>("MediaVF.Entities.ArtistTrack.FK_UserArtist_Artist", "Artist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_UserArtist_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaVF.Entities.ArtistTrack.FK_UserArtist_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaVF.Entities.ArtistTrack.FK_UserArtist_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MediaVF.Entities.ArtistTrack.FK_UserArtist_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MediaVF.Entities.ArtistTrack.FK_UserArtist_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MediaVF.Entities.ArtistTrack", Name="Venue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Venue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Venue object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="modified">Initial value of the Modified property.</param>
        public static Venue CreateVenue(global::System.Int32 id, global::System.String name, global::System.String address1, global::System.DateTime created, global::System.DateTime modified)
        {
            Venue venue = new Venue();
            venue.ID = id;
            venue.Name = name;
            venue.Address1 = address1;
            venue.Created = created;
            venue.Modified = modified;
            return venue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_Venue_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_Venue_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_Venue_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_Venue_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("MediaVF.Entities.ArtistTrack.FK_Venue_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MediaVF.Entities.ArtistTrack", "FK_TourDate_Venue", "TourDate")]
        public EntityCollection<TourDate> TourDates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_Venue", "TourDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TourDate>("MediaVF.Entities.ArtistTrack.FK_TourDate_Venue", "TourDate", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
